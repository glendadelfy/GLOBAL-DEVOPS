[
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.AbrigoEndpoint",
    "Method": "UpdateAbrigo",
    "RelativePath": "abrigos/atualizar/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedAbrigo",
        "Type": "AbrigoAPIMinimal.Model.Abrigo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Atualiza os dados de um abrigo baseado no ID fornecido.",
    "Summary": "Atualiza um abrigo existente"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.AbrigoEndpoint",
    "Method": "GetAbrigo",
    "RelativePath": "abrigos/buscar/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Procura no banco de dados um abrigo correspondente ao ID fornecido.",
    "Summary": "Busca um abrigo por ID"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.AbrigoEndpoint",
    "Method": "CreateAbrigo",
    "RelativePath": "abrigos/criar",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "abrigo",
        "Type": "AbrigoAPIMinimal.Model.Abrigo",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Registra um novo abrigo tempor\u00E1rio no sistema.",
    "Summary": "Cria um novo abrigo"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.AbrigoEndpoint",
    "Method": "DeleteAbrigo",
    "RelativePath": "abrigos/deletar/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Remove um abrigo espec\u00EDfico do banco de dados.",
    "Summary": "Deleta um abrigo"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.AbrigoEndpoint",
    "Method": "GetAllAbrigos",
    "RelativePath": "abrigos/disponiveis",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Retorna a lista de abrigos tempor\u00E1rios registrados.",
    "Summary": "Lista todos os abrigos dispon\u00EDveis"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CRegisterPessoaEndpoints\u003Eb__0_0",
    "RelativePath": "admin/login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "usuario",
        "Type": "AbrigoAPIMinimal.Models.AdministradorModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.CapacidadeAbrigoEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CRegisterAbrigoCapacidadeEndpoint\u003Eb__0_1",
    "RelativePath": "capacidade-abrigo/prever",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "abrigos",
        "Type": "System.Collections.Generic.List\u00601[[AbrigoAPIMinimal.Models.CapacidadeModel, AbrigoAPIMinimal, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Usa um modelo de Machine Learning para prever a ocupa\u00E7\u00E3o futura com base em dados hist\u00F3ricos.",
    "Summary": "Realiza previs\u00F5es de ocupa\u00E7\u00E3o de abrigos"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.CapacidadeAbrigoEndpoint\u002B\u003C\u003Ec",
    "Method": "\u003CRegisterAbrigoCapacidadeEndpoint\u003Eb__0_0",
    "RelativePath": "capacidade-abrigo/treinar-modelo",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "abrigos",
        "Type": "System.Collections.Generic.List\u00601[[AbrigoAPIMinimal.Models.CapacidadeModel, AbrigoAPIMinimal, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Recebe uma lista de dados e treina um modelo de previs\u00E3o de ocupa\u00E7\u00E3o.",
    "Summary": "Treina e salva o modelo de ocupa\u00E7\u00E3o de abrigos"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.EventoEndpoint",
    "Method": "UpdateEvento",
    "RelativePath": "eventos/atualizar/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedEvento",
        "Type": "AbrigoAPIMinimal.Model.Evento",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Atualiza os dados de um evento baseado no ID fornecido.",
    "Summary": "Atualiza um evento existente"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.EventoEndpoint",
    "Method": "GetEvento",
    "RelativePath": "eventos/buscar/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Procura no banco de dados um evento correspondente ao ID fornecido.",
    "Summary": "Busca um evento por ID"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.EventoEndpoint",
    "Method": "CreateEvento",
    "RelativePath": "eventos/criar",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "evento",
        "Type": "AbrigoAPIMinimal.Model.Evento",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Adiciona um novo evento ao banco de dados.",
    "Summary": "Registra um novo evento"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.EventoEndpoint",
    "Method": "DeleteEvento",
    "RelativePath": "eventos/deletar/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Remove um evento espec\u00EDfico do banco de dados.",
    "Summary": "Deleta um evento"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.EventoEndpoint",
    "Method": "GetAllEventos",
    "RelativePath": "eventos/todos",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Retorna a lista de eventos relacionados aos abrigos.",
    "Summary": "Lista todos os eventos registrados"
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_4",
    "RelativePath": "gerar-token",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint",
    "Method": "UpdatePessoa",
    "RelativePath": "pessoas/atualizar/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedPessoa",
        "Type": "AbrigoAPIMinimal.Model.Pessoa",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Atualiza os dados de uma pessoa espec\u00EDfica baseado no ID fornecido.",
    "Summary": "Atualiza dados de uma pessoa"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint",
    "Method": "GetPessoa",
    "RelativePath": "pessoas/buscar/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Procura no banco de dados uma pessoa correspondente ao ID fornecido.",
    "Summary": "Busca uma pessoa por ID"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint",
    "Method": "GetAllPessoas",
    "RelativePath": "pessoas/cadastradas",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Acessa o banco de dados e retorna todas as pessoas cadastradas.",
    "Summary": "Lista todas as pessoas cadastradas"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint",
    "Method": "CreatePessoa",
    "RelativePath": "pessoas/criar",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pessoa",
        "Type": "AbrigoAPIMinimal.Model.Pessoa",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Adiciona uma nova pessoa ao banco de dados.",
    "Summary": "Cria uma nova pessoa"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.PessoaEndpoint",
    "Method": "DeletePessoa",
    "RelativePath": "pessoas/deletar/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Remove uma pessoa espec\u00EDfica do banco de dados.",
    "Summary": "Deleta uma pessoa"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.RecursoEndpoint",
    "Method": "UpdateRecurso",
    "RelativePath": "recursos/atualizar/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedRecurso",
        "Type": "AbrigoAPIMinimal.Model.Recurso",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Atualiza os dados de um recurso espec\u00EDfico baseado no ID fornecido.",
    "Summary": "Atualiza um recurso existente"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.RecursoEndpoint",
    "Method": "GetRecurso",
    "RelativePath": "recursos/buscar/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Procura no banco de dados um recurso correspondente ao ID fornecido.",
    "Summary": "Busca um recurso por ID"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.RecursoEndpoint",
    "Method": "GetAllRecursos",
    "RelativePath": "recursos/cadastrados",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Acessa o banco de dados e retorna todos os recursos cadastrados.",
    "Summary": "Lista todos os recursos dispon\u00EDveis"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.RecursoEndpoint",
    "Method": "CreateRecurso",
    "RelativePath": "recursos/criar",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recurso",
        "Type": "AbrigoAPIMinimal.Model.Recurso",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Adiciona um novo recurso ao banco de dados.",
    "Summary": "Cria um novo recurso"
  },
  {
    "ContainingType": "AbrigoAPIMinimal.Middelewares.Endpoints.RecursoEndpoint",
    "Method": "DeleteRecurso",
    "RelativePath": "recursos/deletar/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ],
    "Description": "Remove um recurso espec\u00EDfico do banco de dados.",
    "Summary": "Deleta um recurso"
  }
]